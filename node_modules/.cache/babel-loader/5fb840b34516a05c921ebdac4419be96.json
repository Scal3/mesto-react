{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    token\n  }) {\n    this._url = baseUrl;\n    this._token = token;\n  }\n\n  _checkResponse(res) {\n    //ПРОВЕРКА ЗАПРОСА\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`${res.status}`);\n    }\n  }\n\n  getCards() {\n    //ПОЛУЧИТЬ КАРТОЧКИ С СЕРВЕРА\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkResponse);\n  }\n\n  getUserData() {\n    //ПОЛУЧИТЬ ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkResponse);\n  }\n\n  editProfileInfo({\n    name,\n    about\n  }) {\n    //ИЗМЕНИТЬ ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCard({\n    name,\n    link\n  }) {\n    //ДОБАВИТЬ НОВУЮ КАРТОЧКУ\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    //УДАЛИТЬ КАРТОЧКУ\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkResponse);\n  }\n\n  addLike(card) {\n    //ПОСТАВИТЬ ЛАЙК\n    return fetch(`${this._url}/cards/likes/${card._id}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkResponse);\n  }\n\n  removeLike(card) {\n    //УБРАТЬ ЛАЙК\n    return fetch(`${this._url}/cards/likes/${card._id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkResponse);\n  }\n\n  edidProfileAvatar(avatar) {\n    //ИЗМЕНИТЬ ФОТО ПРОФИЛЯ\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-24\",\n  token: \"997275f5-db75-4740-889c-9561326b8f49\"\n});","map":{"version":3,"sources":["D:/WEB/projects/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","token","_url","_token","_checkResponse","res","ok","json","Promise","reject","status","getCards","fetch","headers","authorization","then","getUserData","editProfileInfo","name","about","method","body","JSON","stringify","addNewCard","link","deleteCard","id","addLike","card","_id","removeLike","edidProfileAvatar","avatar","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({baseUrl, token}) {\r\n    this._url = baseUrl\r\n    this._token = token\r\n  }\r\n\r\n  _checkResponse(res) {//ПРОВЕРКА ЗАПРОСА\r\n      if(res.ok) {\r\n        return res.json()\r\n      } else {\r\n        return Promise.reject(`${res.status}`)\r\n      }\r\n  }\r\n\r\n  getCards() {  //ПОЛУЧИТЬ КАРТОЧКИ С СЕРВЕРА\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  getUserData() { //ПОЛУЧИТЬ ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  editProfileInfo({name, about}) {  //ИЗМЕНИТЬ ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  addNewCard({name, link}) {  //ДОБАВИТЬ НОВУЮ КАРТОЧКУ\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  deleteCard(id) {  //УДАЛИТЬ КАРТОЧКУ\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n          authorization: this._token,\r\n      }\r\n  })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  addLike(card) { //ПОСТАВИТЬ ЛАЙК\r\n    return fetch(`${this._url}/cards/likes/${card._id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n          authorization: this._token,\r\n      }\r\n  })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  removeLike(card) {  //УБРАТЬ ЛАЙК\r\n    return fetch(`${this._url}/cards/likes/${card._id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n          authorization: this._token,\r\n      }\r\n  })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  edidProfileAvatar(avatar) { //ИЗМЕНИТЬ ФОТО ПРОФИЛЯ\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: avatar\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-24\",\r\n  token: \"997275f5-db75-4740-889c-9561326b8f49\",\r\n});"]},"metadata":{},"sourceType":"module"}