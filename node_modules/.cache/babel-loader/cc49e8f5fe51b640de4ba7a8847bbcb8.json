{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB\\\\projects\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  let [userName, setUserName] = useState(''); //Стэйт имени профиля\n\n  let [userDescription, setUserDescription] = useState(''); //Стэйт описания профиля\n\n  let [userAvatar, setUserAvatar] = useState(''); //Стэйт аватара профиля\n\n  let [cards, setCards] = useState([]); //Стэйт массива для карточек\n  // useEffect(() => {\n  //   Promise.all()\n  //   //Устанавливаем данные пользователя\n  //   api.getUserData()\n  //     .then(res => {\n  //       setUserName(res.name)\n  //       setUserDescription(res.about)\n  //       setUserAvatar(res.avatar)\n  //     })\n  //   //Запрашиваем массив карточек\n  //   api.getCards()\n  //     .then(res => {\n  //       setCards(res)\n  //     })\n  // });\n\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getCards()]).then(([userData, cards]) => {\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar);\n      setCards(cards);\n    }).catch(e => {\n      console.log(`Ошибка при получении данных: ${e}`);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile profile_top_margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__xl-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          alt: \"\\u0444\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n          className: \"profile__avatar\",\n          onClick: props.onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__xl-container-without-img\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__name-and-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile__edit-button\",\n              type: \"button\",\n              \"aria-label\": \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__job\",\n            children: userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: cards.map((card, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: props.cardImageClick\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"CvoWnINbj4Vl8fSyetGIFG8y3YQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/WEB/projects/mesto-react/src/components/Main.js"],"names":["React","useState","useEffect","api","Card","Main","props","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","Promise","all","getUserData","getCards","then","userData","name","about","avatar","catch","e","console","log","onEditAvatar","onEditProfile","onAddPlace","map","card","i","cardImageClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../utils/api'\r\nimport Card from './Card'\r\n\r\n\r\nfunction Main(props) {\r\n\r\n  let [userName, setUserName] = useState('');  //Стэйт имени профиля\r\n  let [userDescription, setUserDescription] = useState('');  //Стэйт описания профиля\r\n  let [userAvatar, setUserAvatar] = useState('');  //Стэйт аватара профиля\r\n  let [cards, setCards] = useState([]); //Стэйт массива для карточек\r\n\r\n  // useEffect(() => {\r\n\r\n  //   Promise.all()\r\n\r\n  //   //Устанавливаем данные пользователя\r\n  //   api.getUserData()\r\n  //     .then(res => {\r\n  //       setUserName(res.name)\r\n  //       setUserDescription(res.about)\r\n  //       setUserAvatar(res.avatar)\r\n  //     })\r\n\r\n  //   //Запрашиваем массив карточек\r\n  //   api.getCards()\r\n  //     .then(res => {\r\n  //       setCards(res)\r\n  //     })\r\n  // });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getUserData(), api.getCards()])\r\n      .then(([userData, cards]) => {\r\n        setUserName(userData.name)\r\n        setUserDescription(userData.about)\r\n        setUserAvatar(userData.avatar)\r\n        setCards(cards)\r\n      })\r\n      .catch((e) => {\r\n        console.log(`Ошибка при получении данных: ${e}`)\r\n      })\r\n  })\r\n\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      {/* секция профиля */}\r\n      <section className=\"profile profile_top_margin\">\r\n        <div className=\"profile__xl-container\">\r\n          <img src={userAvatar} alt=\"фото профиля\" className=\"profile__avatar\" onClick={props.onEditAvatar} />\r\n          <div className=\"profile__xl-container-without-img\">\r\n            <div className=\"profile__name-and-button\">\r\n              <h1 className=\"profile__name\">{userName}</h1>\r\n              <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Изменить\" onClick={props.onEditProfile}/>\r\n            </div>\r\n            <p className=\"profile__job\">{userDescription}</p>\r\n          </div>\r\n        </div>\r\n        <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={props.onAddPlace}/>\r\n      </section>\r\n      {/* секция с карточками */}\r\n      <section className=\"cards\">\r\n        {cards.map((card, i) => {\r\n          return (\r\n            <Card key={i} card={card} onCardClick={props.cardImageClick}/>\r\n            );\r\n          })}\r\n        </section >\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main"]},"metadata":{},"sourceType":"module"}