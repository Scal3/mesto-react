{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","src","link","alt","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","aria-label","onEditProfile","about","onAddPlace","cards","map","cardImageClick","Footer","ImagePopup","open","onClose","api","baseUrl","token","this","_url","_token","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_checkResponse","method","body","JSON","stringify","PopupWithForm","isOpen","title","action","autoComplete","onSubmit","children","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","required","placeholder","minLength","maxLength","onChange","target","value","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserData","getCards","userData","catch","console","log","Provider","removeLike","newCard","state","c","addLike","deleteCard","newArr","filter","item","editProfileInfo","edidProfileAvatar","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b12420d4.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Header() {\n  return (\n    <header className=\"header header_top_margin\">\n      <div className=\"header__logo\" />\n    </header>\n  )\n}\n\nexport default Header","import React from 'react'\n\nexport const CurrentUserContext = React.createContext();","import React from \"react\"\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Card(props) {\n\n  const currentUser = React.useContext(CurrentUserContext)  //Контекст с инфой пользователя\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id\n\n  // className для кнопки удаления\n  const cardDeleteButtonClassName = (\n  `card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\n  )\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id)\n\n  // className для кнопки лайка\n  const cardLikeButtonClassName = (\n    `card__like-button ${isLiked ? 'card__like-button_active' : ''}`\n  ) \n\n  // Обработчик лика по картинке\n  function handleClick() {\n    props.onCardClick(props.card)\n  }   \n\n  // Обработчик лика по кнопке лайка\n  function handleLikeClick() {\n    props.onCardLike(props.card)\n  }\n\n  // Обработчик лика по кнопке удаления\n  function handleDeleteClick() {\n    props.onCardDelete(props.card)\n  }\n\n  return (\n      <div className=\"card card_margin_bottom\">\n        <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDeleteClick}></button>\n        <img src={props.card.link} alt={props.card.name} className=\"card__image\" onClick={handleClick}/>\n        <div className=\"card__title-and-button\">\n          <h2 className=\"card__title\">{props.card.name}</h2>\n          <div className=\"card__container\">\n            <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\n            <p className=\"card__like-counter\">{props.card.likes.length}</p>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\n\nfunction Main(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);  //Контекст с инфой пользователя\n\n  return (\n    <main className=\"main\">\n      {/* секция профиля */}\n      <section className=\"profile profile_top_margin\">\n        <div className=\"profile__xl-container\">\n          <img src={currentUser.avatar} alt=\"фото профиля\" className=\"profile__avatar\" onClick={props.onEditAvatar} />\n          <div className=\"profile__xl-container-without-img\">\n            <div className=\"profile__name-and-button\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Изменить\" onClick={props.onEditProfile}/>\n            </div>\n            <p className=\"profile__job\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={props.onAddPlace}/>\n      </section>\n      {/* секция с карточками */}\n      <section className=\"cards\">\n        {props.cards.map((card) => {\n          return (\n            <Card key={card._id} card={card} onCardClick={props.cardImageClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\n            );\n          })}\n        </section >\n\n    </main>\n  )\n}\n\nexport default Main","import React from \"react\"\n\nfunction Footer() {\n  return (\n    <footer className=\"footer footer_margin_top\">\n      <p className=\"footer__copy\">©2021 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer","import React from \"react\"\n\nfunction ImagePopup(props) {\n\n  //Переменная для присвоения класса открытого попапа\n  let open = null\n\n  //Проверка стэйта\n  if (props.card.link) {\n    open = 'popup_opened'\n  }\n\n  return (\n    <div className={`image-popup popup popup_type_image ${open}`}>\n      <div className=\"image-popup__container\">\n        <button className=\"popup__close-button popup__close-button_type_image\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}/>\n        <img src={`${props.card.link}`} alt=\"this-pic\" className=\"image-popup__image\" />\n        <h2 className=\"image-popup__title\">{props.card.name}</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default ImagePopup","class Api {\n  constructor({baseUrl, token}) {\n    this._url = baseUrl\n    this._token = token\n  }\n\n  _checkResponse(res) {//ПРОВЕРКА ЗАПРОСА\n      if(res.ok) {\n        return res.json()\n      } else {\n        return Promise.reject(`${res.status}`)\n      }\n  }\n\n  getCards() {  //ПОЛУЧИТЬ КАРТОЧКИ С СЕРВЕРА\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(this._checkResponse)\n  }\n\n  getUserData() { //ПОЛУЧИТЬ ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(this._checkResponse)\n  }\n\n  editProfileInfo({name, about}) {  //ИЗМЕНИТЬ ДАННЫЕ ПОЛЬЗОВАТЕЛЯ\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  addNewCard({name, link}) {  //ДОБАВИТЬ НОВУЮ КАРТОЧКУ\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(card) {  //УДАЛИТЬ КАРТОЧКУ\n    return fetch(`${this._url}/cards/${card._id}`, {\n      method: 'DELETE',\n      headers: {\n          authorization: this._token,\n      }\n  })\n    .then(this._checkResponse)\n  }\n\n  addLike(card) { //ПОСТАВИТЬ ЛАЙК\n    return fetch(`${this._url}/cards/likes/${card._id}`, {\n      method: 'PUT',\n      headers: {\n          authorization: this._token,\n      }\n  })\n    .then(this._checkResponse)\n  }\n\n  removeLike(card) {  //УБРАТЬ ЛАЙК\n    return fetch(`${this._url}/cards/likes/${card._id}`, {\n      method: 'DELETE',\n      headers: {\n          authorization: this._token,\n      }\n  })\n    .then(this._checkResponse)\n  }\n\n  edidProfileAvatar({avatar}) { //ИЗМЕНИТЬ ФОТО ПРОФИЛЯ\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n    .then(this._checkResponse)\n  }\n}\n\n\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-24\",\n  token: \"997275f5-db75-4740-889c-9561326b8f49\",\n});\n\nexport default api","import React from \"react\"\n\nfunction PopupWithForm(props) {\n\n  //Переменная для присвоения класса открытого попапа\n  let open = null\n\n  //Проверка стэйта\n  if (props.isOpen === true) {\n    open = 'popup_opened'\n  }\n\n  return (\n    <div className={`popup popup_type_${props.name} ${open}`}>\n      <div className=\"popup__container\">\n        <button className={`popup__close-button popup__close-button_type_${props.name}`} type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}/>\n        <h2 className=\"popup__heading\">{props.title}</h2>\n        <form className={`popup__form popup__form_type_${props.name}`} name={`${props.name}-form`} method=\"POST\" action=\"#\" autoComplete=\"off\" onSubmit={props.onSubmit}>\n          <fieldset className=\"popup__set\">\n            {props.children}\n            <button type=\"submit\" className=\"popup__submit\">{props.buttonText}</button>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithForm","import React from 'react'\nimport PopupWithForm from './PopupWithForm';\nimport { useState, useEffect } from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n\n  const currentUser = React.useContext(CurrentUserContext)\n\n\n  const [name, setName] = useState('') // Стэйт имени пользователя\n  const [description, setDescription] = useState('')  // Стэйт описания пользователя\n\n\n  // Данные текущего пользователя из API будут использованы в управляемых компонентах\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n\n  const handleName = e => setName(e.target.value)\n\n  const handleDescription = e => setDescription(e.target.value)\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n  \n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  } \n\n\n  return (\n    <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={props.isOpen} onClose={props.onClose} buttonText=\"Сохранить\" onSubmit={handleSubmit}>\n      <div className=\"popup__section\">\n        <input type=\"text\" required className=\"popup__input popup__input_type_name\" name=\"name\" placeholder=\"Введите ваше имя\" minLength=\"2\" maxLength=\"40\" onChange={handleName} value={name || ''}/>\n        <span className=\"popup__input-error popup__input-error_position_up\" />\n      </div>\n      <div className=\"popup__section\">\n        <input type=\"text\" required className=\"popup__input popup__input_type_job\" name=\"about\" placeholder=\"Введите вашу профессию\" minLength=\"2\" maxLength=\"200\" onChange={handleDescription} value={description || ''}/>\n        <span className=\"popup__input-error popup__input-error_position_dawn\" />\n      </div>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup","import React from 'react'\nimport PopupWithForm from './PopupWithForm';\nimport { useRef } from 'react'\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = useRef()// Реф инпута для аватара\n\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    \n    props.onUpdateAvatar({\n      avatar: inputRef.current.value\n    })\n  }\n\n\n  return (\n    <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={props.isOpen} onClose={props.onClose} buttonText=\"Изменить\" onSubmit={handleSubmit}>\n      <div className=\"popup__section\">\n        <input type=\"url\" required className=\"popup__input popup__input_type_update-link\" name=\"link\" placeholder=\"Ссылка на картинку\" ref={inputRef}/>\n        <span className=\"popup__input-error popup__input-error_position_up\" />\n      </div>\n    </PopupWithForm>\n  )\n  \n}\n\nexport default EditAvatarPopup","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n  const [name, setName] = React.useState('') // Стэйт имени пользователя\n  const [link, setLink] = React.useState('')  // Стэйт описания пользователя\n  \n  const handleName = e => setName(e.target.value)\n\n  const handleLink = e => setLink(e.target.value)\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    \n    props.onAddPlace({\n      name: name,\n      link: link,\n    });\n\n    setName('')\n    setLink('')\n  }\n\n  return (\n    <PopupWithForm name=\"card\" title=\"Новое место\" isOpen={props.isOpen} onClose={props.onClose} buttonText=\"Добавить\" onSubmit={handleSubmit}>\n      <div className=\"popup__section\">\n        <input type=\"text\" required className=\"popup__input popup__input_type_title\" name=\"name\" placeholder=\"Название\" minLength='2' maxLength='30' value={name} onChange={handleName} />\n        <span className=\"popup__input-error popup__input-error_position_up\" />\n      </div>\n      <div className=\"popup__section\">\n        <input type=\"url\" required className=\"popup__input popup__input_type_link\" name=\"link\" placeholder=\"Ссылка на картинку\" value={link} onChange={handleLink} />\n        <span className=\"popup__input-error popup__input-error_position_dawn\" />\n      </div>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup","import React from 'react'\nimport { useState, useEffect } from 'react'\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);  //Стэйт профиля\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);  //Стэйт карточки\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);  //Стэйт аватара\n  const [selectedCard, setSelectedCard] = useState({name: '', link: ''});  //Стэйт кликнутой карточки\n  const [currentUser, setCurrentUser] = useState({})  //Стэйт данных пользователя\n  const [cards, setCards] = useState([]); //Стэйт массива для карточек\n\n\n  //Получаем данные пользователя и список карточек\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getCards()])\n      .then(([userData, cards]) => {\n        setCurrentUser(userData)\n        setCards(cards)\n      })\n      .catch((e) => {\n        console.log(`Ошибка загрузки данных: ${e}`)\n      })\n  }, [])\n\n\n  //Обработчик клика по карточке\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  //Обработчик открытия попапа изменения аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  //Обработчик открытия попапа редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  //Обработчик открытия попапа добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  //Обработчик закрытия всех попапов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsEditProfilePopupOpen(false)\n    setSelectedCard({name: '', link: ''})\n  }\n\n  //Обработчик для обновления информации о пользователе\n  function handleUpdateUser({name, about}) {\n    api.editProfileInfo({name, about})\n      .then(res => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((e) => {\n        console.log(`Ошибка обновления информации: ${e}`)\n      })\n  }\n\n  //Обработчик для обновления аватара\n  function handleUpdateAvatar({avatar}) {\n    api.edidProfileAvatar({avatar})\n      .then(res => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch((e) => {\n        console.log(`Ошибка обновления аватара: ${e}`)\n      })\n  }\n\n  //Возможность ставить лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (!isLiked) {\n      api.addLike(card)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c))\n      })\n      .catch((e) => {\n        console.log(`Ошибка, картинка не лайкнута: ${e}`)\n      })\n    } else {\n        api.removeLike(card)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c))\n        })\n        .catch((e) => {\n          console.log(`Ошибка, лайк не снят: ${e}`)\n        })\n    }\n  }\n\n  //Возможность удалить карточку\n  function handleCardDelete(card) {\n    api.deleteCard(card)\n      .then((res) => {\n        const newArr = cards.filter((item) => item._id !== card._id)\n        setCards(newArr)\n      })\n      .catch((e) => {\n        console.log(`Ошибка удаления карточки: ${e}`)\n      })\n  }\n\n  //Возможность добавить карточку\n  function handleAddPlaceSubmit({name, link}) {\n    api.addNewCard({name, link})\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      })\n      .catch((e) => {\n        console.log(`Ошибка добавления карточки: ${e}`)\n      })\n  }\n\n\n  return (\n    <div>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n\n      <Main \n      onEditProfile={handleEditProfileClick} \n      onAddPlace={handleAddPlaceClick} \n      onEditAvatar={handleEditAvatarClick} \n      cardImageClick={handleCardClick}\n      cards={cards}\n      onCardLike={handleCardLike}\n      onCardDelete={handleCardDelete}\n      />\n\n      <Footer />\n\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/> \n\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n    </CurrentUserContext.Provider>\n  </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}